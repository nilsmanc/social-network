{"version":3,"file":"static/js/752.9be21a76.chunk.js","mappings":"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","sources":["webpack://react-first/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-first/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-first/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__r6tDq\",\"posts\":\"MyPosts_posts__4pUsA\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__AueTq\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://static.vecteezy.com/system/resources/previews/002/275/847/original/male-avatar-profile-icon-of-smiling-caucasian-man-vector.jpg\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Field } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utilities/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post key={p.id} message={p.message} likesCount={p.likesCount} />\r\n  ));\r\n\r\n  //let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"newPostText\"\r\n          component={Textarea}\r\n          placeholder={\"Post message\"}\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__fI29I\",\"mainPhoto\":\"ProfileInfo_mainPhoto__BxLV7\",\"contact\":\"ProfileInfo_contact__Qvirx\"};","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <b>Status: </b>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"-----\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport {\r\n  createField,\r\n  Input,\r\n  Textarea,\r\n} from \"./../../common/FormsControls/FormsControls\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <button>save</button>\r\n      </div>\r\n      {error && <div className={style.formSummaryError}>{error}</div>}\r\n      <div>\r\n        <b>Full name </b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job </b>:\r\n        {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n      </div>\r\n\r\n      <div>\r\n        <b>My professional skills </b>:\r\n        {createField(\r\n          \"My professional skills\",\r\n          \"lookingForAJobDescription\",\r\n          [],\r\n          Textarea\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <b>About me</b>:{createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:{\" \"}\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <div key={key} className={s.contact}>\r\n              <b>\r\n                {key}: {createField(key, \"contacts.\" + key, [], Input)}\r\n              </b>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataFormReduxFrom = reduxForm({ form: \"edit-profile\" })(\r\n  ProfileDataForm\r\n);\r\nexport default ProfileDataFormReduxFrom;\r\n","import React, { useState } from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  saveProfile,\r\n}) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n        {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n        {editMode ? (\r\n          <ProfileDataForm\r\n            initialValues={profile}\r\n            profile={profile}\r\n            onSubmit={onSubmit}\r\n          />\r\n        ) : (\r\n          <ProfileData\r\n            goToEditMode={() => {\r\n              setEditMode(true);\r\n            }}\r\n            profile={profile}\r\n            isOwner={isOwner}\r\n          />\r\n        )}\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={goToEditMode}>edit</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>Full name </b>: {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job </b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <b>My professional skills </b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>About me</b>: {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:{\" \"}\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={s.contact}>\r\n      <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        savePhoto={props.savePhoto}\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        saveProfile={props.saveProfile}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n  getStatus,\r\n  getUserProfile,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n} from \"../../redux/profile-reducer\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"../../hoc/withRouter\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.router.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.router.params.userId != prevProps.router.params.userId)\r\n      this.refreshProfile();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.router.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"names":["props","className","s","src","message","likesCount","MyPosts","React","postsElements","posts","map","p","id","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","connect","state","profilePage","dispatch","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","error","style","createField","Input","type","Object","keys","contacts","key","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","photos","large","userPhoto","target","files","length","initialValues","formData","then","ProfileContainer","userId","this","router","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter","withAuthRedirect"],"sourceRoot":""}